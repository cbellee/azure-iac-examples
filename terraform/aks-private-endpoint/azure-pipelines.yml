trigger:
  branches:
    include:
    - main
  paths:
    include:
    - terraform/aks-private-endpoint/terraform/*
    exclude:
    - terraform/aks-private-endpoint/azure-pipelines.yml

variables:
  - name: serviceConnection
    value: 'Federated - FTA Internal Subscription'
  - name: BACKEND_AZURE_STORAGE_ACCOUNT_NAME
    value: 'tfstatestorcbellee452023'
  - name: BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME
    value: 'aks-federated-identity-tf-demo'
  - name: BACKEND_AZURE_RESOURCE_GROUP_NAME
    value: 'tf-state-rg'
  - name: AZURE_RESOURCE_GROUP_NAME
    value: 'aks-federated-identity-tf-demo'
  - name: TF_PATH
    value: ./terraform/aks-private-endpoint/terraform
  - name: useMsi 
    value: true

stages:
- stage: dev_deployment
  displayName: 'Dev deployment'
  jobs:
  - deployment: deploy_aks_infra
    displayName: 'deploy Dev AKS infrastructure'
    pool:
      name: my-vmss-agent-pool-01
    environment: dev-aks-private
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self     
          ### The following task shows an example of using OIDC outside of one of the Terraform tasks, should you need something very specific and custom that is not supported by the tasks yet. ###
          - task: AzureCLI@2
            displayName: Terraform Init and Apply
            inputs:
              azureSubscription: '${{ variables.serviceConnection }}'
              scriptType: pscore
              scriptLocation: inlineScript
              inlineScript: |
                ../scripts/set_terraform_azurerm_vars.ps1
                
                terraform init -backend-config=storage_account_name=$(BACKEND_AZURE_STORAGE_ACCOUNT_NAME) -backend-config=container_name=$(BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME) -backend-config=resource_group_name=$(BACKEND_AZURE_RESOURCE_GROUP_NAME)
                terraform apply --auto-approve -var="resource_group_name=$(AZURE_RESOURCE_GROUP_NAME)"     
              useGlobalConfig: true
              addSpnToEnvironment: true # This flag is required to set the idToken environment variable.
              failOnStandardError: true
              workingDirectory: $(workingDirectory)  
            env:
              ARM_USE_AZUREAD: true  