trigger:
  branches:
    include:
    - main
  paths:
    include:
    - terraform/ado-vmss-federated-identity/terraform/*
    exclude:
    - terraform/ado-vmss-federated-identity/azure-pipelines.yml

variables:
  - group: tf_vars
  - name: TF_PATH
    value: ./terraform
  - name: TF_LOG_LEVEL
    value: 'INFO'

stages:
- stage: dev_deployment
  displayName: 'Dev deployment'
  jobs:
  - deployment: deploy_aks_infra
    displayName: 'deploy K8S resources'
    pool:
      name: ado-vmss-agent-pool
    environment: dev-aks-private
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self 
          - task: AzureCLI@2
            displayName: Terraform Init and Apply
            inputs:
              azureSubscription: '${{ variables.SERVICE_CONNECTION_NAME }}'
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                export ARM_OIDC_TOKEN=$idToken
                export ARM_USE_OIDC=true
                export TF_LOG=$(TF_LOG_LEVEL)

                echo "ARM_CLIENT_ID: $ARM_CLIENT_ID"
                echo "ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)"
                echo "ARM_TENANT_ID: $(ARM_TENANT_ID)"
                echo "ARM_USE_OIDC: $ARM_USE_OIDC"
                echo "ARM_OIDC_TOKEN: $ARM_OIDC_TOKEN"
                echo "TF_LOG: $TF_LOG_LEVEL"

                cd ../terraform
                
                # init
                terraform init \
                  -backend-config=storage_account_name=$(BACKEND_AZURE_STORAGE_ACCOUNT_NAME) \
                  -backend-config=container_name=$(BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME) \
                  -backend-config=resource_group_name=$(BACKEND_AZURE_RESOURCE_GROUP_NAME) \
                  -backend-config=tenant_id=$(ARM_TENANT_ID) \
                  -backend-config=subscription_id=$(ARM_SUBSCRIPTION_ID) \
                  -backend-config=key=$(TF_STATE_KEY)
                
                # plan
                terraform plan \
                  -out=myplan.tfplan \
                  -var="resource_group_name=$(AZURE_RESOURCE_GROUP_NAME)" \
                  -var="client_id=$(ARM_CLIENT_ID)" \
                  -var="tenant_id=$(ARM_TENANT_ID)"

                # apply
                terraform apply --auto-approve myplan.tfplan

              useGlobalConfig: true
              addSpnToEnvironment: true # This flag is required to set the idToken environment variable.
              failOnStandardError: true
              workingDirectory: $(workingDirectory)  
