parameters:
   - name: azureServiceConnection
     type: string
   - name: location
     type: string
   - name: appName
     type: string
   - name: prefix
     type: string
   - name: containerPort
     type: string
   - name: vmImageName
     type: string
   - name: colour
     type: string
   - name: tag
     type: string
     default: '$(Build.BuildId)'
   - name: minReplicas
     type: string
   - name: maxReplicas
     type: string

jobs:
  - job: ContainerAppProvisionJob
    displayName: Container App Provision job
    variables:
    - name: resourceGroupName
      value: $[stageDependencies.InfraDeploymentStage.InfraProvisionJob.outputs['GetDeploymentOutputs.resourceGroupName']]
    - name: acrName
      value: $[stageDependencies.InfraDeploymentStage.InfraProvisionJob.outputs['GetDeploymentOutputs.acrName']]
    - name: acaEnvironmentName
      value: $[stageDependencies.InfraDeploymentStage.InfraProvisionJob.outputs['GetDeploymentOutputs.acaEnvironmentName']]
    - name: acaEnvironmentId
      value: $[stageDependencies.InfraDeploymentStage.InfraProvisionJob.outputs['GetDeploymentOutputs.acaEnvironmentId']]
    - name: umidId
      value: $[stageDependencies.InfraDeploymentStage.InfraProvisionJob.outputs['GetDeploymentOutputs.umidId']]
    - name: umidName
      value: $[stageDependencies.InfraDeploymentStage.InfraProvisionJob.outputs['GetDeploymentOutputs.umidName']]

    pool:
      vmImage: ${{ parameters.vmImageName }}
    steps:

    - checkout: self 

    - task: AzureCLI@2
      displayName: 'CreateContainerApp'
      enabled: true
      inputs:
        azureSubscription:  ${{ parameters.azureServiceConnection }}
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az deployment group create \
            --name 'app-deployment' \
            --resource-group $(resourceGroupName) \
            --template-file ./modules/containerApp.bicep \
            --parameters location=$(location) \
            --parameters environmentId=$(acaEnvironmentId) \
            --parameters targetPort=${{ parameters.containerPort }} \
            --parameters colour=$(colour) \
            --parameters prefix=$(prefix) \
            --parameters imageName="$(acrName).azurecr.io/${{ parameters.appName }}" \
            --parameters imageTag="${{ parameters.tag }}" \
            --parameters umidId=$(umidId) \
            --parameters acrName="$(acrName).azurecr.io"
